# file: bett
# bett parameter completion
# copied from w

function _bett () {
	local cur prev opts course story old_story round league league_re script_arg fileopts diropts keywords
	COMPREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"
	opts="-c -s -o -r -l -x"
	course="business conversation call"
	story="cusp dickson candidate"
	old_story="cusp dickson candidate"
	round="7 8 9 10 11 12 13 14 15 16 17 18"
	league="GL00019 FLA0018 FLA0021 FLA0027 2040 3024 AFB1J0 AFBB32"
	league_re="GL00019|FLA0018|FLA0021|FLA0027|2040|3024|AFB1J0|AFBB32"
	fileopts="-a|--batch-file|--download-archive|--cookies|--load-info"
	diropts="--cache-dir"

	if [[ ${prev} =~ ${fileopts} ]]; then
	COMPREPLY=( $(compgen -f -- ${cur}) )
	return 0
	elif [[ ${prev} =~ ${diropts} ]]; then
	COMPREPLY=( $(compgen -d -- ${cur}) )
	return 0
	fi

	if [[ ${prev} == bett ]]; then
	COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
	return 0
	elif [[ ${prev} == -c ]] ; then
	COMPREPLY=( $(compgen -W "${course}" -- ${cur}) )
	return 0
	elif [[ ${prev} == -s ]] ; then
	COMPREPLY=( $(compgen -W "${story}" -- ${cur}) )
	return 0
	elif [[ ${prev} == -o ]] ; then
	COMPREPLY=( $(compgen -W "${old_story}" -- ${cur}) )
	return 0
	elif [[ ${prev} == -r ]] ; then
	COMPREPLY=( $(compgen -W "${round}" -- ${cur}) )
	return 0
	elif [[ ${prev} == -l ]] ; then
	COMPREPLY=( $(compgen -W "${league}" -- ${cur}) )
	return 0
	elif [[ ${prev} == -x ]] ; then
	COMPREPLY=( $(compgen -W "${league}" -- ${cur}) )
	return 0
	elif [[ ${cur} == * ]] ; then
	COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
	return 0
	fi
}

complete -F _bett bett
